# Uncomment this line to define a global platform for your project
platform :ios, '13.0'


# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!
  pod 'lottie-ios'
  pod 'Firebase', :modular_headers => true
  pod 'Firebase/Crashlytics', :modular_headers => true
#   pod 'Firebase/Crashlytics', '~> 8.0'
  pod 'Firebase/Analytics', :modular_headers => true
  pod 'Firebase/Performance', :modular_headers => true
  pod 'Firebase/Auth' #, :modular_headers => true  # Add Firebase Authentication
  pod 'GoogleUtilities'
  pod 'OneSignalXCFramework', '>= 5.0.0', '< 6.0'
#   pod 'OneSignal/OneSignalInAppMessages', '>= 5.0.0', '< 6.0'
  
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end
  
  
target 'CPFC ImageNotification' do
  use_frameworks!
  pod 'Firebase/Messaging'
#   pod 'Firebase/Crashlytics', '~> 8.0'
  pod 'GoogleUtilities'
  pod 'OneSignalXCFramework', '>= 5.0.0', '< 6.0'
#   pod 'OneSignal/OneSignalInAppMessages', '>= 5.0.0', '< 6.0'
end


post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      # --- Fix for Xcode 15.0 ---
      xcconfig_path = config.base_configuration_reference.real_path
      xcconfig = File.read(xcconfig_path)
      xcconfig_mod = xcconfig.gsub(/DT_TOOLCHAIN_DIR/, "TOOLCHAIN_DIR")
      File.open(xcconfig_path, "w") { |file| file << xcconfig_mod }

#      config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'No'
#      config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'

    end
  end
#  set_run_script_to_always_run_when_no_input_or_output_files_exist(project: installer.pods_project)
end


# Fix Xcode 14 warnings like:
# warning: Run script build phase '[CP] Copy XCFrameworks' will be run during every build because it does not specify any outputs. To address this warning, either add output dependencies to the script phase, or configure it to run in every build by unchecking "Based on dependency analysis" in the script phase. (in target 'ATargetNameHere' from project 'YourProjectName')
# Ref.: https://github.com/CocoaPods/CocoaPods/issues/11444


#def set_run_script_to_always_run_when_no_input_or_output_files_exist(project:)
#  project.targets.each do |target|
#    run_script_build_phases = target.build_phases.filter { |phase| phase.is_a?(Xcodeproj::Project::Object::PBXShellScriptBuildPhase) }
#    cocoapods_run_script_build_phases = run_script_build_phases.filter { |phase| phase.name.start_with?("[CP]") }
#    cocoapods_run_script_build_phases.each do |run_script|
#      next unless (run_script.input_paths || []).empty? && (run_script.output_paths || []).empty?
#      run_script.always_out_of_date = "1"
#    end
#  end
#  project.save
#end
#
#post_integrate do |installer|
#  main_project = installer.aggregate_targets[0].user_project
#  set_run_script_to_always_run_when_no_input_or_output_files_exist(project: main_project)
#end

